fastq.info(fastq=TIC2022_009.fastq)
trim.seqs(fasta=TIC2022_009.fasta, qfile=TIC2022_009.qual, qwindowaverage=20, minlength=250, processors=16)
make.group(fasta=TIC2022_009.trim.fasta, groups=TIC2022_009)
fastq.info(fastq=TIC2022_004.fastq)
trim.seqs(fasta=TIC2022_004.fasta, qfile=TIC2022_004.qual, qwindowaverage=20, minlength=250, processors=16)
make.group(fasta=TIC2022_004.trim.fasta, groups=TIC2022_004)
fastq.info(fastq=TIC2022_019.fastq)
trim.seqs(fasta=TIC2022_019.fasta, qfile=TIC2022_019.qual, qwindowaverage=20, minlength=250, processors=16)
make.group(fasta=TIC2022_019.trim.fasta, groups=TIC2022_019)
fastq.info(fastq=TIC2022_063.fastq)
trim.seqs(fasta=TIC2022_063.fasta, qfile=TIC2022_063.qual, qwindowaverage=20, minlength=250, processors=16)
make.group(fasta=TIC2022_063.trim.fasta, groups=TIC2022_063)
fastq.info(fastq=RIY_2017.fastq)
trim.seqs(fasta=RIY_2017.fasta, qfile=RIY_2017.qual, qwindowaverage=20, minlength=250, processors=16)
make.group(fasta=RIY_2017.trim.fasta, groups=RIY_2017)
fastq.info(fastq=TIC2015_003L.fastq)
trim.seqs(fasta=TIC2015_003L.fasta, qfile=TIC2015_003L.qual, qwindowaverage=20, minlength=250, processors=16)
make.group(fasta=TIC2015_003L.trim.fasta, groups=TIC2015_003L)
fastq.info(fastq=Evans_2016.fastq)
trim.seqs(fasta=Evans_2016.fasta, qfile=Evans_2016.qual, qwindowaverage=20, minlength=250, processors=16)
make.group(fasta=Evans_2016.trim.fasta, groups=Evans_2016)
fastq.info(fastq=TIC2021_043.fastq)
trim.seqs(fasta=TIC2021_043.fasta, qfile=TIC2021_043.qual, qwindowaverage=20, minlength=250, processors=16)
make.group(fasta=TIC2021_043.trim.fasta, groups=TIC2021_043)
fastq.info(fastq=RIY_2015.fastq)
trim.seqs(fasta=RIY_2015.fasta, qfile=RIY_2015.qual, qwindowaverage=20, minlength=250, processors=16)
make.group(fasta=RIY_2015.trim.fasta, groups=RIY_2015)
fastq.info(fastq=TIC2017_034.fastq)
trim.seqs(fasta=TIC2017_034.fasta, qfile=TIC2017_034.qual, qwindowaverage=20, minlength=250, processors=16)
make.group(fasta=TIC2017_034.trim.fasta, groups=TIC2017_034)
fastq.info(fastq=TIC2018_003I.fastq)
trim.seqs(fasta=TIC2018_003I.fasta, qfile=TIC2018_003I.qual, qwindowaverage=20, minlength=250, processors=16)
make.group(fasta=TIC2018_003I.trim.fasta, groups=TIC2018_003I)
fastq.info(fastq=TIC2016_050C.fastq)
trim.seqs(fasta=TIC2016_050C.fasta, qfile=TIC2016_050C.qual, qwindowaverage=20, minlength=250, processors=16)
make.group(fasta=TIC2016_050C.trim.fasta, groups=TIC2016_050C)
fastq.info(fastq=TIC2017_022.fastq)
trim.seqs(fasta=TIC2017_022.fasta, qfile=TIC2017_022.qual, qwindowaverage=20, minlength=250, processors=16)
make.group(fasta=TIC2017_022.trim.fasta, groups=TIC2017_022)
fastq.info(fastq=TIC2018_014C.fastq)
trim.seqs(fasta=TIC2018_014C.fasta, qfile=TIC2018_014C.qual, qwindowaverage=20, minlength=250, processors=16)
make.group(fasta=TIC2018_014C.trim.fasta, groups=TIC2018_014C)
fastq.info(fastq=TIC2022_001.fastq)
trim.seqs(fasta=TIC2022_001.fasta, qfile=TIC2022_001.qual, qwindowaverage=20, minlength=250, processors=16)
make.group(fasta=TIC2022_001.trim.fasta, groups=TIC2022_001)
fastq.info(fastq=TIC2018_007A.fastq)
trim.seqs(fasta=TIC2018_007A.fasta, qfile=TIC2018_007A.qual, qwindowaverage=20, minlength=250, processors=16)
make.group(fasta=TIC2018_007A.trim.fasta, groups=TIC2018_007A)
fastq.info(fastq=ACE2016_060.fastq)
trim.seqs(fasta=ACE2016_060.fasta, qfile=ACE2016_060.qual, qwindowaverage=20, minlength=250, processors=16)
make.group(fasta=ACE2016_060.trim.fasta, groups=ACE2016_060)
fastq.info(fastq=TIC2018_014B.fastq)
trim.seqs(fasta=TIC2018_014B.fasta, qfile=TIC2018_014B.qual, qwindowaverage=20, minlength=250, processors=16)
make.group(fasta=TIC2018_014B.trim.fasta, groups=TIC2018_014B)
fastq.info(fastq=TIC2018_007C.fastq)
trim.seqs(fasta=TIC2018_007C.fasta, qfile=TIC2018_007C.qual, qwindowaverage=20, minlength=250, processors=16)
make.group(fasta=TIC2018_007C.trim.fasta, groups=TIC2018_007C)
fastq.info(fastq=TIC2019_013.fastq)
trim.seqs(fasta=TIC2019_013.fasta, qfile=TIC2019_013.qual, qwindowaverage=20, minlength=250, processors=16)
make.group(fasta=TIC2019_013.trim.fasta, groups=TIC2019_013)
fastq.info(fastq=TIC2018_007D.fastq)
trim.seqs(fasta=TIC2018_007D.fasta, qfile=TIC2018_007D.qual, qwindowaverage=20, minlength=250, processors=16)
make.group(fasta=TIC2018_007D.trim.fasta, groups=TIC2018_007D)
fastq.info(fastq=TIC2017_019.fastq)
trim.seqs(fasta=TIC2017_019.fasta, qfile=TIC2017_019.qual, qwindowaverage=20, minlength=250, processors=16)
make.group(fasta=TIC2017_019.trim.fasta, groups=TIC2017_019)
fastq.info(fastq=TIC2022_005.fastq)
trim.seqs(fasta=TIC2022_005.fasta, qfile=TIC2022_005.qual, qwindowaverage=20, minlength=250, processors=16)
make.group(fasta=TIC2022_005.trim.fasta, groups=TIC2022_005)
fastq.info(fastq=TIC2016_050AD.fastq)
trim.seqs(fasta=TIC2016_050AD.fasta, qfile=TIC2016_050AD.qual, qwindowaverage=20, minlength=250, processors=16)
make.group(fasta=TIC2016_050AD.trim.fasta, groups=TIC2016_050AD)
fastq.info(fastq=TIC2018_014E.fastq)
trim.seqs(fasta=TIC2018_014E.fasta, qfile=TIC2018_014E.qual, qwindowaverage=20, minlength=250, processors=16)
make.group(fasta=TIC2018_014E.trim.fasta, groups=TIC2018_014E)
fastq.info(fastq=TIC2016_050A.fastq)
trim.seqs(fasta=TIC2016_050A.fasta, qfile=TIC2016_050A.qual, qwindowaverage=20, minlength=250, processors=16)
make.group(fasta=TIC2016_050A.trim.fasta, groups=TIC2016_050A)
fastq.info(fastq=TIC2016_051.fastq)
trim.seqs(fasta=TIC2016_051.fasta, qfile=TIC2016_051.qual, qwindowaverage=20, minlength=250, processors=16)
make.group(fasta=TIC2016_051.trim.fasta, groups=TIC2016_051)
fastq.info(fastq=TIC2018_007E.fastq)
trim.seqs(fasta=TIC2018_007E.fasta, qfile=TIC2018_007E.qual, qwindowaverage=20, minlength=250, processors=16)
make.group(fasta=TIC2018_007E.trim.fasta, groups=TIC2018_007E)
fastq.info(fastq=Evans_2015B.fastq)
trim.seqs(fasta=Evans_2015B.fasta, qfile=Evans_2015B.qual, qwindowaverage=20, minlength=250, processors=16)
make.group(fasta=Evans_2015B.trim.fasta, groups=Evans_2015B)
fastq.info(fastq=TIC2021_034.fastq)
trim.seqs(fasta=TIC2021_034.fasta, qfile=TIC2021_034.qual, qwindowaverage=20, minlength=250, processors=16)
make.group(fasta=TIC2021_034.trim.fasta, groups=TIC2021_034)
fastq.info(fastq=TIC2016_050B.fastq)
trim.seqs(fasta=TIC2016_050B.fasta, qfile=TIC2016_050B.qual, qwindowaverage=20, minlength=250, processors=16)
make.group(fasta=TIC2016_050B.trim.fasta, groups=TIC2016_050B)
fastq.info(fastq=TIC2015_006A.fastq)
trim.seqs(fasta=TIC2015_006A.fasta, qfile=TIC2015_006A.qual, qwindowaverage=20, minlength=250, processors=16)
make.group(fasta=TIC2015_006A.trim.fasta, groups=TIC2015_006A)
fastq.info(fastq=TIC2022_021.fastq)
trim.seqs(fasta=TIC2022_021.fasta, qfile=TIC2022_021.qual, qwindowaverage=20, minlength=250, processors=16)
make.group(fasta=TIC2022_021.trim.fasta, groups=TIC2022_021)
fastq.info(fastq=TIC2014_001.fastq)
trim.seqs(fasta=TIC2014_001.fasta, qfile=TIC2014_001.qual, qwindowaverage=20, minlength=250, processors=16)
make.group(fasta=TIC2014_001.trim.fasta, groups=TIC2014_001)
fastq.info(fastq=TIC2020_003.fastq)
trim.seqs(fasta=TIC2020_003.fasta, qfile=TIC2020_003.qual, qwindowaverage=20, minlength=250, processors=16)
make.group(fasta=TIC2020_003.trim.fasta, groups=TIC2020_003)
fastq.info(fastq=TIC2017_028.fastq)
trim.seqs(fasta=TIC2017_028.fasta, qfile=TIC2017_028.qual, qwindowaverage=20, minlength=250, processors=16)
make.group(fasta=TIC2017_028.trim.fasta, groups=TIC2017_028)
fastq.info(fastq=TIC2015_027.fastq)
trim.seqs(fasta=TIC2015_027.fasta, qfile=TIC2015_027.qual, qwindowaverage=20, minlength=250, processors=16)
make.group(fasta=TIC2015_027.trim.fasta, groups=TIC2015_027)
fastq.info(fastq=TIC2018_003E.fastq)
trim.seqs(fasta=TIC2018_003E.fasta, qfile=TIC2018_003E.qual, qwindowaverage=20, minlength=250, processors=16)
make.group(fasta=TIC2018_003E.trim.fasta, groups=TIC2018_003E)
fastq.info(fastq=TIC2021_002.fastq)
trim.seqs(fasta=TIC2021_002.fasta, qfile=TIC2021_002.qual, qwindowaverage=20, minlength=250, processors=16)
make.group(fasta=TIC2021_002.trim.fasta, groups=TIC2021_002)
fastq.info(fastq=RIY_2016.fastq)
trim.seqs(fasta=RIY_2016.fasta, qfile=RIY_2016.qual, qwindowaverage=20, minlength=250, processors=16)
make.group(fasta=RIY_2016.trim.fasta, groups=RIY_2016)
fastq.info(fastq=TIC2016_050D.fastq)
trim.seqs(fasta=TIC2016_050D.fasta, qfile=TIC2016_050D.qual, qwindowaverage=20, minlength=250, processors=16)
make.group(fasta=TIC2016_050D.trim.fasta, groups=TIC2016_050D)
fastq.info(fastq=TIC2022_059.fastq)
trim.seqs(fasta=TIC2022_059.fasta, qfile=TIC2022_059.qual, qwindowaverage=20, minlength=250, processors=16)
make.group(fasta=TIC2022_059.trim.fasta, groups=TIC2022_059)
fastq.info(fastq=TIC2016_053.fastq)
trim.seqs(fasta=TIC2016_053.fasta, qfile=TIC2016_053.qual, qwindowaverage=20, minlength=250, processors=16)
make.group(fasta=TIC2016_053.trim.fasta, groups=TIC2016_053)
fastq.info(fastq=Evans_2014.fastq)
trim.seqs(fasta=Evans_2014.fasta, qfile=Evans_2014.qual, qwindowaverage=20, minlength=250, processors=16)
make.group(fasta=Evans_2014.trim.fasta, groups=Evans_2014)
fastq.info(fastq=TIC2015_003E.fastq)
trim.seqs(fasta=TIC2015_003E.fasta, qfile=TIC2015_003E.qual, qwindowaverage=20, minlength=250, processors=16)
make.group(fasta=TIC2015_003E.trim.fasta, groups=TIC2015_003E)
fastq.info(fastq=TIC2012_056.fastq)
trim.seqs(fasta=TIC2012_056.fasta, qfile=TIC2012_056.qual, qwindowaverage=20, minlength=250, processors=16)
make.group(fasta=TIC2012_056.trim.fasta, groups=TIC2012_056)
fastq.info(fastq=TIC2018_003C.fastq)
trim.seqs(fasta=TIC2018_003C.fasta, qfile=TIC2018_003C.qual, qwindowaverage=20, minlength=250, processors=16)
make.group(fasta=TIC2018_003C.trim.fasta, groups=TIC2018_003C)
fastq.info(fastq=TIC2016_050AH.fastq)
trim.seqs(fasta=TIC2016_050AH.fasta, qfile=TIC2016_050AH.qual, qwindowaverage=20, minlength=250, processors=16)
make.group(fasta=TIC2016_050AH.trim.fasta, groups=TIC2016_050AH)
fastq.info(fastq=TIC2015_202.fastq)
trim.seqs(fasta=TIC2015_202.fasta, qfile=TIC2015_202.qual, qwindowaverage=20, minlength=250, processors=16)
make.group(fasta=TIC2015_202.trim.fasta, groups=TIC2015_202)
fastq.info(fastq=TIC2012_057.fastq)
trim.seqs(fasta=TIC2012_057.fasta, qfile=TIC2012_057.qual, qwindowaverage=20, minlength=250, processors=16)
make.group(fasta=TIC2012_057.trim.fasta, groups=TIC2012_057)
fastq.info(fastq=Evans_2015.fastq)
trim.seqs(fasta=Evans_2015.fasta, qfile=Evans_2015.qual, qwindowaverage=20, minlength=250, processors=16)
make.group(fasta=Evans_2015.trim.fasta, groups=Evans_2015)
fastq.info(fastq=TIC2017_030.fastq)
trim.seqs(fasta=TIC2017_030.fasta, qfile=TIC2017_030.qual, qwindowaverage=20, minlength=250, processors=16)
make.group(fasta=TIC2017_030.trim.fasta, groups=TIC2017_030)
fastq.info(fastq=TIC2015_006B.fastq)
trim.seqs(fasta=TIC2015_006B.fasta, qfile=TIC2015_006B.qual, qwindowaverage=20, minlength=250, processors=16)
make.group(fasta=TIC2015_006B.trim.fasta, groups=TIC2015_006B)
fastq.info(fastq=TIC2015_201.fastq)
trim.seqs(fasta=TIC2015_201.fasta, qfile=TIC2015_201.qual, qwindowaverage=20, minlength=250, processors=16)
make.group(fasta=TIC2015_201.trim.fasta, groups=TIC2015_201)
fastq.info(fastq=TIC2015_219.fastq)
trim.seqs(fasta=TIC2015_219.fasta, qfile=TIC2015_219.qual, qwindowaverage=20, minlength=250, processors=16)
make.group(fasta=TIC2015_219.trim.fasta, groups=TIC2015_219)
fastq.info(fastq=TIC2018_003A.fastq)
trim.seqs(fasta=TIC2018_003A.fasta, qfile=TIC2018_003A.qual, qwindowaverage=20, minlength=250, processors=16)
make.group(fasta=TIC2018_003A.trim.fasta, groups=TIC2018_003A)
fastq.info(fastq=TIC2015_013.fastq)
trim.seqs(fasta=TIC2015_013.fasta, qfile=TIC2015_013.qual, qwindowaverage=20, minlength=250, processors=16)
make.group(fasta=TIC2015_013.trim.fasta, groups=TIC2015_013)
fastq.info(fastq=TIC2021_031.fastq)
trim.seqs(fasta=TIC2021_031.fasta, qfile=TIC2021_031.qual, qwindowaverage=20, minlength=250, processors=16)
make.group(fasta=TIC2021_031.trim.fasta, groups=TIC2021_031)
fastq.info(fastq=TIC2015_204.fastq)
trim.seqs(fasta=TIC2015_204.fasta, qfile=TIC2015_204.qual, qwindowaverage=20, minlength=250, processors=16)
make.group(fasta=TIC2015_204.trim.fasta, groups=TIC2015_204)
fastq.info(fastq=TIC2016_050AW.fastq)
trim.seqs(fasta=TIC2016_050AW.fasta, qfile=TIC2016_050AW.qual, qwindowaverage=20, minlength=250, processors=16)
make.group(fasta=TIC2016_050AW.trim.fasta, groups=TIC2016_050AW)
fastq.info(fastq=TIC2018_014A.fastq)
trim.seqs(fasta=TIC2018_014A.fasta, qfile=TIC2018_014A.qual, qwindowaverage=20, minlength=250, processors=16)
make.group(fasta=TIC2018_014A.trim.fasta, groups=TIC2018_014A)
fastq.info(fastq=TIC2018_003J.fastq)
trim.seqs(fasta=TIC2018_003J.fasta, qfile=TIC2018_003J.qual, qwindowaverage=20, minlength=250, processors=16)
make.group(fasta=TIC2018_003J.trim.fasta, groups=TIC2018_003J)
fastq.info(fastq=TIC2015_217.fastq)
trim.seqs(fasta=TIC2015_217.fasta, qfile=TIC2015_217.qual, qwindowaverage=20, minlength=250, processors=16)
make.group(fasta=TIC2015_217.trim.fasta, groups=TIC2015_217)
fastq.info(fastq=TIC2015_206.fastq)
trim.seqs(fasta=TIC2015_206.fasta, qfile=TIC2015_206.qual, qwindowaverage=20, minlength=250, processors=16)
make.group(fasta=TIC2015_206.trim.fasta, groups=TIC2015_206)
fastq.info(fastq=TIC2018_003H.fastq)
trim.seqs(fasta=TIC2018_003H.fasta, qfile=TIC2018_003H.qual, qwindowaverage=20, minlength=250, processors=16)
make.group(fasta=TIC2018_003H.trim.fasta, groups=TIC2018_003H)
fastq.info(fastq=TIC2017_026.fastq)
trim.seqs(fasta=TIC2017_026.fasta, qfile=TIC2017_026.qual, qwindowaverage=20, minlength=250, processors=16)
make.group(fasta=TIC2017_026.trim.fasta, groups=TIC2017_026)
fastq.info(fastq=ACE2016_080.fastq)
trim.seqs(fasta=ACE2016_080.fasta, qfile=ACE2016_080.qual, qwindowaverage=20, minlength=250, processors=16)
make.group(fasta=ACE2016_080.trim.fasta, groups=ACE2016_080)
fastq.info(fastq=TIC2017_020.fastq)
trim.seqs(fasta=TIC2017_020.fasta, qfile=TIC2017_020.qual, qwindowaverage=20, minlength=250, processors=16)
make.group(fasta=TIC2017_020.trim.fasta, groups=TIC2017_020)
fastq.info(fastq=RIY_2016B.fastq)
trim.seqs(fasta=RIY_2016B.fasta, qfile=RIY_2016B.qual, qwindowaverage=20, minlength=250, processors=16)
make.group(fasta=RIY_2016B.trim.fasta, groups=RIY_2016B)
fastq.info(fastq=TIC2015_218.fastq)
trim.seqs(fasta=TIC2015_218.fasta, qfile=TIC2015_218.qual, qwindowaverage=20, minlength=250, processors=16)
make.group(fasta=TIC2015_218.trim.fasta, groups=TIC2015_218)
fastq.info(fastq=TIC2017_025.fastq)
trim.seqs(fasta=TIC2017_025.fasta, qfile=TIC2017_025.qual, qwindowaverage=20, minlength=250, processors=16)
make.group(fasta=TIC2017_025.trim.fasta, groups=TIC2017_025)
fastq.info(fastq=TIC2021_004.fastq)
trim.seqs(fasta=TIC2021_004.fasta, qfile=TIC2021_004.qual, qwindowaverage=20, minlength=250, processors=16)
make.group(fasta=TIC2021_004.trim.fasta, groups=TIC2021_004)
fastq.info(fastq=TIC2017_018.fastq)
trim.seqs(fasta=TIC2017_018.fasta, qfile=TIC2017_018.qual, qwindowaverage=20, minlength=250, processors=16)
make.group(fasta=TIC2017_018.trim.fasta, groups=TIC2017_018)
fastq.info(fastq=TIC2010_031.fastq)
trim.seqs(fasta=TIC2010_031.fasta, qfile=TIC2010_031.qual, qwindowaverage=20, minlength=250, processors=16)
make.group(fasta=TIC2010_031.trim.fasta, groups=TIC2010_031)
fastq.info(fastq=TIC2015_205.fastq)
trim.seqs(fasta=TIC2015_205.fasta, qfile=TIC2015_205.qual, qwindowaverage=20, minlength=250, processors=16)
make.group(fasta=TIC2015_205.trim.fasta, groups=TIC2015_205)
fastq.info(fastq=TIC2022_003.fastq)
trim.seqs(fasta=TIC2022_003.fasta, qfile=TIC2022_003.qual, qwindowaverage=20, minlength=250, processors=16)
make.group(fasta=TIC2022_003.trim.fasta, groups=TIC2022_003)
fastq.info(fastq=TIC2018_003D.fastq)
trim.seqs(fasta=TIC2018_003D.fasta, qfile=TIC2018_003D.qual, qwindowaverage=20, minlength=250, processors=16)
make.group(fasta=TIC2018_003D.trim.fasta, groups=TIC2018_003D)
fastq.info(fastq=ACE2016_045.fastq)
trim.seqs(fasta=ACE2016_045.fasta, qfile=ACE2016_045.qual, qwindowaverage=20, minlength=250, processors=16)
make.group(fasta=ACE2016_045.trim.fasta, groups=ACE2016_045)
fastq.info(fastq=TIC2015_003F.fastq)
trim.seqs(fasta=TIC2015_003F.fasta, qfile=TIC2015_003F.qual, qwindowaverage=20, minlength=250, processors=16)
make.group(fasta=TIC2015_003F.trim.fasta, groups=TIC2015_003F)
fastq.info(fastq=TIC2018_003M.fastq)
trim.seqs(fasta=TIC2018_003M.fasta, qfile=TIC2018_003M.qual, qwindowaverage=20, minlength=250, processors=16)
make.group(fasta=TIC2018_003M.trim.fasta, groups=TIC2018_003M)
fastq.info(fastq=TIC2022_008.fastq)
trim.seqs(fasta=TIC2022_008.fasta, qfile=TIC2022_008.qual, qwindowaverage=20, minlength=250, processors=16)
make.group(fasta=TIC2022_008.trim.fasta, groups=TIC2022_008)
fastq.info(fastq=TIC2018_007B.fastq)
trim.seqs(fasta=TIC2018_007B.fasta, qfile=TIC2018_007B.qual, qwindowaverage=20, minlength=250, processors=16)
make.group(fasta=TIC2018_007B.trim.fasta, groups=TIC2018_007B)
fastq.info(fastq=TIC2021_022.fastq)
trim.seqs(fasta=TIC2021_022.fasta, qfile=TIC2021_022.qual, qwindowaverage=20, minlength=250, processors=16)
make.group(fasta=TIC2021_022.trim.fasta, groups=TIC2021_022)
fastq.info(fastq=TIC2018_003B.fastq)
trim.seqs(fasta=TIC2018_003B.fasta, qfile=TIC2018_003B.qual, qwindowaverage=20, minlength=250, processors=16)
make.group(fasta=TIC2018_003B.trim.fasta, groups=TIC2018_003B)
fastq.info(fastq=TIC2022_070.fastq)
trim.seqs(fasta=TIC2022_070.fasta, qfile=TIC2022_070.qual, qwindowaverage=20, minlength=250, processors=16)
make.group(fasta=TIC2022_070.trim.fasta, groups=TIC2022_070)
fastq.info(fastq=TIC2018_003G.fastq)
trim.seqs(fasta=TIC2018_003G.fasta, qfile=TIC2018_003G.qual, qwindowaverage=20, minlength=250, processors=16)
make.group(fasta=TIC2018_003G.trim.fasta, groups=TIC2018_003G)
fastq.info(fastq=TIC2018_014D.fastq)
trim.seqs(fasta=TIC2018_014D.fasta, qfile=TIC2018_014D.qual, qwindowaverage=20, minlength=250, processors=16)
make.group(fasta=TIC2018_014D.trim.fasta, groups=TIC2018_014D)
fastq.info(fastq=TIC2018_003F.fastq)
trim.seqs(fasta=TIC2018_003F.fasta, qfile=TIC2018_003F.qual, qwindowaverage=20, minlength=250, processors=16)
make.group(fasta=TIC2018_003F.trim.fasta, groups=TIC2018_003F)
merge.files(input=TIC2022_009.trim.fasta-TIC2022_004.trim.fasta-TIC2022_019.trim.fasta-TIC2022_063.trim.fasta-RIY_2017.trim.fasta-TIC2015_003L.trim.fasta-Evans_2016.trim.fasta-TIC2021_043.trim.fasta-RIY_2015.trim.fasta-TIC2017_034.trim.fasta-TIC2018_003I.trim.fasta-TIC2016_050C.trim.fasta-TIC2017_022.trim.fasta-TIC2018_014C.trim.fasta-TIC2022_001.trim.fasta-TIC2018_007A.trim.fasta-ACE2016_060.trim.fasta-TIC2018_014B.trim.fasta-TIC2018_007C.trim.fasta-TIC2019_013.trim.fasta-TIC2018_007D.trim.fasta-TIC2017_019.trim.fasta-TIC2022_005.trim.fasta-TIC2016_050AD.trim.fasta-TIC2018_014E.trim.fasta-TIC2016_050A.trim.fasta-TIC2016_051.trim.fasta-TIC2018_007E.trim.fasta-Evans_2015B.trim.fasta-TIC2021_034.trim.fasta-TIC2016_050B.trim.fasta-TIC2015_006A.trim.fasta-TIC2022_021.trim.fasta-TIC2014_001.trim.fasta-TIC2020_003.trim.fasta-TIC2017_028.trim.fasta-TIC2015_027.trim.fasta-TIC2018_003E.trim.fasta-TIC2021_002.trim.fasta-RIY_2016.trim.fasta-TIC2016_050D.trim.fasta-TIC2022_059.trim.fasta-TIC2016_053.trim.fasta-Evans_2014.trim.fasta-TIC2015_003E.trim.fasta-TIC2012_056.trim.fasta-TIC2018_003C.trim.fasta-TIC2016_050AH.trim.fasta-TIC2015_202.trim.fasta-TIC2012_057.trim.fasta-Evans_2015.trim.fasta-TIC2017_030.trim.fasta-TIC2015_006B.trim.fasta-TIC2015_201.trim.fasta-TIC2015_219.trim.fasta-TIC2018_003A.trim.fasta-TIC2015_013.trim.fasta-TIC2021_031.trim.fasta-TIC2015_204.trim.fasta-TIC2016_050AW.trim.fasta-TIC2018_014A.trim.fasta-TIC2018_003J.trim.fasta-TIC2015_217.trim.fasta-TIC2015_206.trim.fasta-TIC2018_003H.trim.fasta-TIC2017_026.trim.fasta-ACE2016_080.trim.fasta-TIC2017_020.trim.fasta-RIY_2016B.trim.fasta-TIC2015_218.trim.fasta-TIC2017_025.trim.fasta-TIC2021_004.trim.fasta-TIC2017_018.trim.fasta-TIC2010_031.trim.fasta-TIC2015_205.trim.fasta-TIC2022_003.trim.fasta-TIC2018_003D.trim.fasta-ACE2016_045.trim.fasta-TIC2015_003F.trim.fasta-TIC2018_003M.trim.fasta-TIC2022_008.trim.fasta-TIC2018_007B.trim.fasta-TIC2021_022.trim.fasta-TIC2018_003B.trim.fasta-TIC2022_070.trim.fasta-TIC2018_003G.trim.fasta-TIC2018_014D.trim.fasta-TIC2018_003F.trim.fasta,output=ABC.trim.contigs.fasta)
merge.count(count=TIC2022_009.trim.count_table-TIC2022_004.trim.count_table-TIC2022_019.trim.count_table-TIC2022_063.trim.count_table-RIY_2017.trim.count_table-TIC2015_003L.trim.count_table-Evans_2016.trim.count_table-TIC2021_043.trim.count_table-RIY_2015.trim.count_table-TIC2017_034.trim.count_table-TIC2018_003I.trim.count_table-TIC2016_050C.trim.count_table-TIC2017_022.trim.count_table-TIC2018_014C.trim.count_table-TIC2022_001.trim.count_table-TIC2018_007A.trim.count_table-ACE2016_060.trim.count_table-TIC2018_014B.trim.count_table-TIC2018_007C.trim.count_table-TIC2019_013.trim.count_table-TIC2018_007D.trim.count_table-TIC2017_019.trim.count_table-TIC2022_005.trim.count_table-TIC2016_050AD.trim.count_table-TIC2018_014E.trim.count_table-TIC2016_050A.trim.count_table-TIC2016_051.trim.count_table-TIC2018_007E.trim.count_table-Evans_2015B.trim.count_table-TIC2021_034.trim.count_table-TIC2016_050B.trim.count_table-TIC2015_006A.trim.count_table-TIC2022_021.trim.count_table-TIC2014_001.trim.count_table-TIC2020_003.trim.count_table-TIC2017_028.trim.count_table-TIC2015_027.trim.count_table-TIC2018_003E.trim.count_table-TIC2021_002.trim.count_table-RIY_2016.trim.count_table-TIC2016_050D.trim.count_table-TIC2022_059.trim.count_table-TIC2016_053.trim.count_table-Evans_2014.trim.count_table-TIC2015_003E.trim.count_table-TIC2012_056.trim.count_table-TIC2018_003C.trim.count_table-TIC2016_050AH.trim.count_table-TIC2015_202.trim.count_table-TIC2012_057.trim.count_table-Evans_2015.trim.count_table-TIC2017_030.trim.count_table-TIC2015_006B.trim.count_table-TIC2015_201.trim.count_table-TIC2015_219.trim.count_table-TIC2018_003A.trim.count_table-TIC2015_013.trim.count_table-TIC2021_031.trim.count_table-TIC2015_204.trim.count_table-TIC2016_050AW.trim.count_table-TIC2018_014A.trim.count_table-TIC2018_003J.trim.count_table-TIC2015_217.trim.count_table-TIC2015_206.trim.count_table-TIC2018_003H.trim.count_table-TIC2017_026.trim.count_table-ACE2016_080.trim.count_table-TIC2017_020.trim.count_table-RIY_2016B.trim.count_table-TIC2015_218.trim.count_table-TIC2017_025.trim.count_table-TIC2021_004.trim.count_table-TIC2017_018.trim.count_table-TIC2010_031.trim.count_table-TIC2015_205.trim.count_table-TIC2022_003.trim.count_table-TIC2018_003D.trim.count_table-ACE2016_045.trim.count_table-TIC2015_003F.trim.count_table-TIC2018_003M.trim.count_table-TIC2022_008.trim.count_table-TIC2018_007B.trim.count_table-TIC2021_022.trim.count_table-TIC2018_003B.trim.count_table-TIC2022_070.trim.count_table-TIC2018_003G.trim.count_table-TIC2018_014D.trim.count_table-TIC2018_003F.trim.count_table,output=ABC.trim.count_table)

#Have a look at the data - adjust screening accordingly
summary.seqs(fasta=ABC.trim.contigs.fasta,count=ABC.trim.count_table, processors=16)

#Clean up sequences (avg of 300 bp, remove anything beyond 50bp in either direction, anything with 7 or more homopolymers and any with ambiguous nucleotides)
screen.seqs(fasta=ABC.trim.contigs.fasta, count=ABC.trim.count_table, maxambig=0, maxhomop=7, maxlength=350, minlength=250,processors=24)

#Get just the unique seqs
unique.seqs(fasta=ABC.trim.contigs.good.fasta, count=ABC.trim.good.count_table) 

#Another quick look at the data
summary.seqs(fasta=ABC.trim.contigs.good.unique.fasta, count=ABC.trim.contigs.good.count_table)

#Remove any chimeric sequences
chimera.vsearch(fasta=ABC.trim.contigs.good.unique.fasta, count=ABC.trim.contigs.good.count_table, dereplicate=t) 

#Time to classify the sequences against the ref db
classify.seqs(fasta=ABC.trim.contigs.good.unique.denovo.vsearch.fasta, count=ABC.trim.contigs.good.denovo.vsearch.count_table,reference=silva.nr_v138_1.align, taxonomy=silva.nr_v138_1.tax, cutoff=80) 

#Use that to remove the lineags you don't want
remove.lineage(fasta=ABC.trim.contigs.good.unique.denovo.vsearch.fasta, count=ABC.trim.contigs.good.denovo.vsearch.count_table, taxonomy=ABC.trim.contigs.good.unique.denovo.vsearch.nr_v138_1.wang.taxonomy,taxon=Chloroplast-Mitochondria-unknown-Archaea-Eukaryota)

#Align all our seqs
align.seqs(fasta=ABC.trim.contigs.good.unique.denovo.vsearch.pick.fasta, reference=silva.nr_v138_1.align, flip=T)

#Remove anything that falls outside of the majority of aligned sequences (95% of sequence must be in between optimized start and end coordinates)
screen.seqs(fasta=ABC.trim.contigs.good.unique.denovo.vsearch.pick.align, count=ABC.trim.contigs.good.denovo.vsearch.pick.count_table, optimize=start-end, criteria=95)

#Remove empty columns from alignment
filter.seqs(fasta=ABC.trim.contigs.good.unique.denovo.vsearch.pick.good.align, vertical=T, trump=.)

#Confirm that everything looks good
summary.seqs(fasta=ABC.trim.contigs.good.unique.denovo.vsearch.pick.good.filter.fasta, count=ABC.trim.contigs.good.denovo.vsearch.pick.good.count_table)

#Get uniques to decrease computational cost
unique.seqs(fasta=ABC.trim.contigs.good.unique.denovo.vsearch.pick.good.filter.fasta, count=ABC.trim.contigs.good.denovo.vsearch.pick.good.count_table)

#Double check all chimeras are gone
chimera.vsearch(fasta=ABC.trim.contigs.good.unique.denovo.vsearch.pick.good.filter.unique.fasta, count=ABC.trim.contigs.good.unique.denovo.vsearch.pick.good.filter.count_table, dereplicate=t)

#Remove singletons
split.abund(fasta=ABC.trim.contigs.good.unique.denovo.vsearch.pick.good.filter.unique.denovo.vsearch.fasta, count=ABC.trim.contigs.good.unique.denovo.vsearch.pick.good.filter.denovo.vsearch.count_table, cutoff=1)

#Classify remaining OTUs
classify.seqs(fasta=ABC.trim.contigs.good.unique.denovo.vsearch.pick.good.filter.unique.denovo.vsearch.abund.fasta, count=ABC.trim.contigs.good.unique.denovo.vsearch.pick.good.filter.denovo.vsearch.abund.count_table,reference=silva.nr_v138_1.align, taxonomy=silva.nr_v138_1.tax, cutoff=80)

#Remove any unwanted taxa
remove.lineage(fasta=ABC.trim.contigs.good.unique.denovo.vsearch.pick.good.filter.unique.denovo.vsearch.abund.fasta, count=ABC.trim.contigs.good.unique.denovo.vsearch.pick.good.filter.denovo.vsearch.abund.count_table,taxonomy=ABC.trim.contigs.good.unique.denovo.vsearch.pick.good.filter.unique.denovo.vsearch.abund.nr_v138_1.wang.taxonomy, taxon=Chloroplast-Mitochondria-unknown-Archaea-Eukaryota)

#Calculate distances between sequences
dist.seqs(fasta=ABC.trim.contigs.good.unique.denovo.vsearch.pick.good.filter.unique.denovo.vsearch.abund.pick.fasta, cutoff=0.03)

#Cluster sequences into OTUs using the opticlust approach: https://doi.org/10.1128/mspheredirect.00073-17
cluster(column=ABC.trim.contigs.good.unique.denovo.vsearch.pick.good.filter.unique.denovo.vsearch.abund.pick.dist, count=ABC.trim.contigs.good.unique.denovo.vsearch.pick.good.filter.denovo.vsearch.abund.pick.count_table, cutoff=0.03, method=opti)

#Find which OTUS are shared between the different samples
make.shared(list=ABC.trim.contigs.good.unique.denovo.vsearch.pick.good.filter.unique.denovo.vsearch.abund.pick.opti_mcc.list, count=ABC.trim.contigs.good.unique.denovo.vsearch.pick.good.filter.denovo.vsearch.abund.pick.count_table)

#Pull out OTUs!
get.oturep(column=ABC.trim.contigs.good.unique.denovo.vsearch.pick.good.filter.unique.denovo.vsearch.abund.pick.dist, count=ABC.trim.contigs.good.unique.denovo.vsearch.pick.good.filter.denovo.vsearch.abund.pick.count_table, list=ABC.trim.contigs.good.unique.denovo.vsearch.pick.good.filter.unique.denovo.vsearch.abund.pick.opti_mcc.list, fasta=ABC.trim.contigs.good.unique.denovo.vsearch.pick.good.filter.unique.denovo.vsearch.abund.pick.fasta, sorted=group, cutoff=0.03)

rename.file(input=ABC.trim.contigs.good.unique.denovo.vsearch.pick.good.filter.unique.denovo.vsearch.abund.pick.opti_mcc.0.03.rep.count_table, new=Final_0.03.rep.count_table)

rename.file(input=ABC.trim.contigs.good.unique.denovo.vsearch.pick.good.filter.unique.denovo.vsearch.abund.pick.opti_mcc.0.03.rep.fasta, new=Final.0.03.rep.fasta)

classify.seqs(fasta=Final.0.03.rep.fasta,count=Final_0.03.rep.count_table,reference=silva.nr_v138_1.align, taxonomy=silva.nr_v138_1.tax, cutoff=80)

count.seqs(count=Final_0.03.rep.count_table, compress=f)

#Repeat for 0.01
dist.seqs(fasta=ABC.trim.contigs.good.unique.denovo.vsearch.pick.good.filter.unique.denovo.vsearch.abund.pick.fasta, cutoff=0.01)
cluster(column=ABC.trim.contigs.good.unique.denovo.vsearch.pick.good.filter.unique.denovo.vsearch.abund.pick.dist, count=ABC.trim.contigs.good.unique.denovo.vsearch.pick.good.filter.denovo.vsearch.abund.pick.count_table, cutoff=0.01, method=opti)
make.shared(list=ABC.trim.contigs.good.unique.denovo.vsearch.pick.good.filter.unique.denovo.vsearch.abund.pick.opti_mcc.list, count=ABC.trim.contigs.good.unique.denovo.vsearch.pick.good.filter.denovo.vsearch.abund.pick.count_table)
get.oturep(column=ABC.trim.contigs.good.unique.denovo.vsearch.pick.good.filter.unique.denovo.vsearch.abund.pick.dist, count=ABC.trim.contigs.good.unique.denovo.vsearch.pick.good.filter.denovo.vsearch.abund.pick.count_table, list=ABC.trim.contigs.good.unique.denovo.vsearch.pick.good.filter.unique.denovo.vsearch.abund.pick.opti_mcc.list, fasta=ABC.trim.contigs.good.unique.denovo.vsearch.pick.good.filter.unique.denovo.vsearch.abund.pick.fasta, sorted=group, cutoff=0.01)
rename.file(input=ABC.trim.contigs.good.unique.denovo.vsearch.pick.good.filter.unique.denovo.vsearch.abund.pick.opti_mcc.0.01.rep.count_table, new=Final_0.01.rep.count_table)
rename.file(input=ABC.trim.contigs.good.unique.denovo.vsearch.pick.good.filter.unique.denovo.vsearch.abund.pick.opti_mcc.0.01.rep.fasta, new=Final.0.01.rep.fasta)
classify.seqs(fasta=Final.0.01.rep.fasta,count=Final_0.01.rep.count_table,reference=silva.nr_v138_1.align, taxonomy=silva.nr_v138_1.tax, cutoff=80)
count.seqs(count=Final_0.01.rep.count_table, compress=f)

